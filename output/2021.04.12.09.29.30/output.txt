Performance Analytics of Graph Algorithms using Intel Optane DC Persistent Memory
by Evan Unmann
OpenMP:
	omp_get_num_procs: 72
	omp_get_max_threads: 18
	OMP_PLACES: {0}:18:2
	OMP_NUM_THREADS: 18
	OMP_PROC_BIND: true
PMEM:
	Version: 1.1
	PMEM Accessible: True
TOP DOWN ONLY BFS
Test Parameters:
	mem_alloc_size:  10.000GB
	graph_num_vertices: 100.000K
	graph_min_degree:  20.00
	graph_max_degree: 200.00
	graph_min_value:   1.00
	graph_max_value:   2.00
	page_rank_iterations: 100.00
	page_rank_num_dampening_factors:   8.00
	test_iterations:  10.00
	out_dir: output/2021.04.12.09.29.30/
Loading Facebook graph from ./graph_examples/facebook_combined.txt
[ Graph DRAM Load | 15.159 ms ]
[ Graph PMEM Copy | 14.518 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 4039 =   4.039K
Number of Edges: 176468 = 176.468K
Memory Size: 1427904 =   1.428MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.001, 120.134
2, 0.001, 260.234
3, 0.001, 199.434
4, 0.001, 202.379
5, 0.001, 222.968
6, 0.001, 239.682
7, 0.001, 192.477
8, 0.001, 217.602
9, 0.001, 237.490
10, 0.001, 245.179
MTEPS:
	Minimum: 120.13
	Maximum: 260.23
	Average: 213.75
	STD_DEV:  37.46
[ Breadth First Traversal | 8.881 ms ]
Breadth First Traversal
Number of Vertices: 4039 =   4.039K
Number of Edges: 176468 = 176.468K
Memory Size: 1427904 =   1.428MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.003, 56.373
2, 0.003, 59.522
3, 0.003, 51.285
4, 0.003, 65.098
5, 0.003, 63.420
6, 0.003, 56.598
7, 0.003, 64.752
8, 0.002, 83.237
9, 0.003, 55.188
10, 0.003, 63.006
MTEPS:
	Minimum:  51.28
	Maximum:  83.23
	Average:  61.84
	STD_DEV:   8.36
[ Breadth First Traversal | 29.355 ms ]
Breadth First Traversal
Number of Vertices: 4039 =   4.039K
Number of Edges: 176468 = 176.468K
Memory Size: 1427904 =   1.428MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.001, 339.026
2, 0.000, 380.367
3, 0.001, 279.739
4, 0.001, 289.332
5, 0.001, 278.322
6, 0.001, 310.528
7, 0.001, 251.047
8, 0.001, 269.488
9, 0.001, 308.387
10, 0.001, 329.510
MTEPS:
	Minimum: 251.04
	Maximum: 380.36
	Average: 303.57
	STD_DEV:  36.37
[ Breadth First Traversal | 6.077 ms ]
Breadth First Traversal
Number of Vertices: 4039 =   4.039K
Number of Edges: 176468 = 176.468K
Memory Size: 1427904 =   1.428MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.003, 66.760
2, 0.003, 66.093
3, 0.003, 67.487
4, 0.003, 64.806
5, 0.002, 71.056
6, 0.003, 67.605
7, 0.003, 65.789
8, 0.002, 75.190
9, 0.002, 88.659
10, 0.002, 73.969
MTEPS:
	Minimum:  64.80
	Maximum:  88.65
	Average:  70.74
	STD_DEV:   6.84
[ Breadth First Traversal | 25.466 ms ]
[ Breadth First Traversal Benchmark | 69.861 ms ]
Loading Epinions graph from ./graph_examples/soc-Epinions1.txt
[ Graph DRAM Load | 37.672 ms ]
[ Graph PMEM Copy | 30.440 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 75888 =  75.888K
Number of Edges: 508837 = 508.837K
Memory Size: 4374252 =   4.374MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.002, 211.003
2, 0.002, 218.505
3, 0.002, 208.886
4, 0.002, 208.533
5, 0.002, 205.663
6, 0.002, 262.352
7, 0.002, 249.071
8, 0.002, 249.525
9, 0.002, 249.114
10, 0.002, 256.579
MTEPS:
	Minimum: 205.66
	Maximum: 262.35
	Average: 231.92
	STD_DEV:  21.95
[ Breadth First Traversal | 24.012 ms ]
Breadth First Traversal
Number of Vertices: 75888 =  75.888K
Number of Edges: 508837 = 508.837K
Memory Size: 4374252 =   4.374MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.013, 35.272
2, 0.013, 35.345
3, 0.013, 36.617
4, 0.013, 35.947
5, 0.013, 35.680
6, 0.013, 36.182
7, 0.013, 35.952
8, 0.013, 34.691
9, 0.013, 35.179
10, 0.013, 35.335
MTEPS:
	Minimum:  34.69
	Maximum:  36.61
	Average:  35.62
	STD_DEV:   0.53
[ Breadth First Traversal | 131.692 ms ]
Breadth First Traversal
Number of Vertices: 75888 =  75.888K
Number of Edges: 508837 = 508.837K
Memory Size: 4374252 =   4.374MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.002, 233.173
2, 0.002, 243.662
3, 0.002, 244.968
4, 0.002, 242.128
5, 0.002, 240.078
6, 0.002, 245.325
7, 0.002, 249.130
8, 0.002, 248.502
9, 0.002, 247.670
10, 0.002, 247.087
MTEPS:
	Minimum: 233.17
	Maximum: 249.13
	Average: 244.17
	STD_DEV:   4.56
[ Breadth First Traversal | 19.377 ms ]
Breadth First Traversal
Number of Vertices: 75888 =  75.888K
Number of Edges: 508837 = 508.837K
Memory Size: 4374252 =   4.374MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.013, 36.239
2, 0.013, 36.765
3, 0.013, 35.434
4, 0.013, 36.586
5, 0.013, 35.589
6, 0.013, 36.578
7, 0.013, 36.169
8, 0.013, 34.724
9, 0.013, 35.114
10, 0.013, 36.688
MTEPS:
	Minimum:  34.72
	Maximum:  36.76
	Average:  35.98
	STD_DEV:   0.68
[ Breadth First Traversal | 130.357 ms ]
[ Breadth First Traversal Benchmark | 305.486 ms ]
Loading Pokec graph from ./graph_examples/soc-pokec-relationships.txt
[ Graph DRAM Load | 2.339 s ]
[ Graph PMEM Copy | 278.628 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 1632804 =   1.633M
Number of Edges: 30622564 =  30.623M
Memory Size: 251511732 = 251.512MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.057, 532.729
2, 0.056, 542.804
3, 0.056, 541.218
4, 0.056, 541.492
5, 0.056, 534.864
6, 0.055, 543.663
7, 0.057, 531.258
8, 0.055, 544.454
9, 0.056, 537.391
10, 0.057, 532.154
MTEPS:
	Minimum: 531.25
	Maximum: 544.45
	Average: 538.20
	STD_DEV:   4.86
[ Breadth First Traversal | 654.990 ms ]
Breadth First Traversal
Number of Vertices: 1632804 =   1.633M
Number of Edges: 30622564 =  30.623M
Memory Size: 251511732 = 251.512MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.100, 301.602
2, 0.111, 270.837
3, 0.114, 264.062
4, 0.119, 253.543
5, 0.119, 253.922
6, 0.123, 244.414
7, 0.111, 271.080
8, 0.118, 255.161
9, 0.119, 252.858
10, 0.128, 235.759
MTEPS:
	Minimum: 235.75
	Maximum: 301.60
	Average: 260.32
	STD_DEV:  17.23
[ Breadth First Traversal | 1.167 s ]
Breadth First Traversal
Number of Vertices: 1632804 =   1.633M
Number of Edges: 30622564 =  30.623M
Memory Size: 251511732 = 251.512MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.068, 445.001
2, 0.066, 458.857
3, 0.066, 455.721
4, 0.066, 457.432
5, 0.066, 458.422
6, 0.066, 456.679
7, 0.066, 456.905
8, 0.066, 454.134
9, 0.066, 457.918
10, 0.067, 450.341
MTEPS:
	Minimum: 445.00
	Maximum: 458.85
	Average: 455.14
	STD_DEV:   4.12
[ Breadth First Traversal | 665.486 ms ]
Breadth First Traversal
Number of Vertices: 1632804 =   1.633M
Number of Edges: 30622564 =  30.623M
Memory Size: 251511732 = 251.512MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.132, 228.029
2, 0.135, 223.809
3, 0.128, 235.933
4, 0.133, 226.261
5, 0.132, 227.765
6, 0.151, 199.478
7, 0.125, 240.445
8, 0.131, 231.058
9, 0.130, 231.403
10, 0.136, 221.631
MTEPS:
	Minimum: 199.47
	Maximum: 240.44
	Average: 226.58
	STD_DEV:  10.45
[ Breadth First Traversal | 1.338 s ]
[ Breadth First Traversal Benchmark | 3.825 s ]
Loading Stack Overflow graph from ./graph_examples/sx-stackoverflow.txt
[ Graph DRAM Load | 9.386 s ]
[ Graph PMEM Copy | 604.332 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 6024271 =   6.024M
Number of Edges: 63497050 =  63.497M
Memory Size: 532073488 = 532.073MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.280, 224.957
2, 0.281, 224.479
3, 0.284, 221.889
4, 0.281, 224.133
5, 0.278, 226.690
6, 0.280, 225.582
7, 0.279, 225.659
8, 0.280, 225.151
9, 0.282, 223.821
10, 0.280, 224.889
MTEPS:
	Minimum: 221.88
	Maximum: 226.69
	Average: 224.72
	STD_DEV:   1.22
[ Breadth First Traversal | 5.571 s ]
Breadth First Traversal
Number of Vertices: 6024271 =   6.024M
Number of Edges: 63497050 =  63.497M
Memory Size: 532073488 = 532.073MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.476, 132.472
2, 0.476, 132.484
3, 0.472, 133.622
4, 0.474, 133.155
5, 0.470, 134.268
6, 0.488, 129.158
7, 0.470, 134.139
8, 0.472, 133.508
9, 0.477, 132.262
10, 0.482, 130.919
MTEPS:
	Minimum: 129.15
	Maximum: 134.26
	Average: 132.59
	STD_DEV:   1.48
[ Breadth First Traversal | 4.779 s ]
Breadth First Traversal
Number of Vertices: 6024271 =   6.024M
Number of Edges: 63497050 =  63.497M
Memory Size: 532073488 = 532.073MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.352, 179.345
2, 0.322, 196.043
3, 0.322, 195.726
4, 0.320, 196.992
5, 0.320, 197.042
6, 0.320, 196.992
7, 0.319, 197.443
8, 0.321, 196.385
9, 0.322, 195.914
10, 0.322, 195.800
MTEPS:
	Minimum: 179.34
	Maximum: 197.44
	Average: 194.76
	STD_DEV:   5.17
[ Breadth First Traversal | 3.257 s ]
Breadth First Traversal
Number of Vertices: 6024271 =   6.024M
Number of Edges: 63497050 =  63.497M
Memory Size: 532073488 = 532.073MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.545, 115.738
2, 0.529, 119.105
3, 0.526, 119.836
4, 0.527, 119.599
5, 0.525, 120.156
6, 0.543, 116.021
7, 0.526, 119.822
8, 0.529, 119.274
9, 0.531, 118.796
10, 0.530, 118.867
MTEPS:
	Minimum: 115.73
	Maximum: 120.15
	Average: 118.72
	STD_DEV:   1.48
[ Breadth First Traversal | 5.336 s ]
[ Breadth First Traversal Benchmark | 18.943 s ]
Loading Live Journal graph from ./graph_examples/soc-LiveJournal1.txt
[ Graph DRAM Load | 4.874 s ]
[ Graph PMEM Copy | 653.904 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 4847571 =   4.848M
Number of Edges: 68993773 =  68.994M
Memory Size: 571340472 = 571.340MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.307, 222.378
2, 0.277, 246.382
3, 0.280, 243.823
4, 0.276, 247.084
5, 0.276, 247.404
6, 0.276, 246.777
7, 0.276, 247.146
8, 0.277, 245.724
9, 0.278, 245.395
10, 0.275, 247.696
MTEPS:
	Minimum: 222.37
	Maximum: 247.69
	Average: 243.98
	STD_DEV:   7.28
[ Breadth First Traversal | 3.313 s ]
Breadth First Traversal
Number of Vertices: 4847571 =   4.848M
Number of Edges: 68993773 =  68.994M
Memory Size: 571340472 = 571.340MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.443, 153.900
2, 0.444, 153.421
3, 0.430, 158.502
4, 0.431, 158.210
5, 0.430, 158.453
6, 0.440, 155.087
7, 0.432, 157.791
8, 0.441, 154.637
9, 0.431, 158.051
10, 0.437, 156.109
MTEPS:
	Minimum: 153.42
	Maximum: 158.50
	Average: 156.41
	STD_DEV:   1.91
[ Breadth First Traversal | 4.374 s ]
Breadth First Traversal
Number of Vertices: 4847571 =   4.848M
Number of Edges: 68993773 =  68.994M
Memory Size: 571340472 = 571.340MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.328, 208.034
2, 0.321, 212.603
3, 0.320, 212.995
4, 0.319, 213.776
5, 0.319, 213.610
6, 0.319, 213.403
7, 0.319, 213.455
8, 0.322, 212.026
9, 0.322, 211.732
10, 0.326, 209.307
MTEPS:
	Minimum: 208.03
	Maximum: 213.77
	Average: 212.09
	STD_DEV:   1.84
[ Breadth First Traversal | 3.224 s ]
Breadth First Traversal
Number of Vertices: 4847571 =   4.848M
Number of Edges: 68993773 =  68.994M
Memory Size: 571340472 = 571.340MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.490, 139.140
2, 0.514, 132.672
3, 0.481, 141.644
4, 0.477, 142.840
5, 0.476, 143.183
6, 0.483, 141.057
7, 0.480, 142.068
8, 0.478, 142.747
9, 0.487, 139.931
10, 0.481, 141.601
MTEPS:
	Minimum: 132.67
	Maximum: 143.18
	Average: 140.68
	STD_DEV:   2.93
[ Breadth First Traversal | 4.861 s ]
[ Breadth First Traversal Benchmark | 15.771 s ]
Loading Orkut graph from ./graph_examples/com-orkut.ungraph.txt
[ Graph DRAM Load | 25.804 s ]
[ Graph PMEM Copy | 2.050 s ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 3072627 =   3.073M
Number of Edges: 234370166 = 234.370M
Memory Size: 1887251840 =   1.887GB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.144, 1631.670
2, 0.143, 1640.998
3, 0.140, 1673.785
4, 0.141, 1665.454
5, 0.140, 1673.479
6, 0.138, 1693.731
7, 0.137, 1712.902
8, 0.140, 1672.203
9, 0.141, 1664.217
10, 0.140, 1678.500
MTEPS:
	Minimum:   1.632K
	Maximum:   1.713K
	Average:   1.671K
	STD_DEV:  22.06
[ Breadth First Traversal | 1.452 s ]
Breadth First Traversal
Number of Vertices: 3072627 =   3.073M
Number of Edges: 234370166 = 234.370M
Memory Size: 1887251840 =   1.887GB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.315, 744.511
2, 0.304, 771.117
3, 0.306, 765.105
4, 0.327, 717.563
5, 0.298, 786.578
6, 0.273, 857.282
7, 0.295, 794.702
8, 0.313, 749.476
9, 0.307, 763.200
10, 0.270, 866.816
MTEPS:
	Minimum: 717.56
	Maximum: 866.81
	Average: 781.63
	STD_DEV:  45.18
[ Breadth First Traversal | 3.012 s ]
Breadth First Traversal
Number of Vertices: 3072627 =   3.073M
Number of Edges: 234370166 = 234.370M
Memory Size: 1887251840 =   1.887GB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.213, 1099.898
2, 0.220, 1064.138
3, 0.222, 1056.291
4, 0.221, 1058.750
5, 0.215, 1090.723
6, 0.213, 1099.465
7, 0.218, 1076.328
8, 0.221, 1062.564
9, 0.218, 1075.227
10, 0.212, 1106.122
MTEPS:
	Minimum:   1.056K
	Maximum:   1.106K
	Average:   1.079K
	STD_DEV:  17.79
[ Breadth First Traversal | 2.176 s ]
Breadth First Traversal
Number of Vertices: 3072627 =   3.073M
Number of Edges: 234370166 = 234.370M
Memory Size: 1887251840 =   1.887GB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.386, 607.677
2, 0.412, 568.936
3, 0.389, 602.860
4, 0.415, 565.032
5, 0.380, 617.521
6, 0.356, 658.390
7, 0.387, 606.254
8, 0.403, 580.967
9, 0.376, 623.130
10, 0.340, 688.824
MTEPS:
	Minimum: 565.03
	Maximum: 688.82
	Average: 611.95
	STD_DEV:  36.56
[ Breadth First Traversal | 3.849 s ]
[ Breadth First Traversal Benchmark | 10.489 s ]
Memory Benchmark
DRAM
Memory Size:  10.000GB
Latency Loads:  25.000MB
Read Sequential
Iteration, Time Elapsed (s), Bandwidth (B/s)
1, 0.094, 106562031276.915
2, 0.093, 106968977541.735
3, 0.094, 106865935444.340
4, 0.094, 106888866672.632
5, 0.094, 106863812447.512
6, 0.094, 106834321910.487
7, 0.094, 106798333347.929
8, 0.094, 106791820985.298
9, 0.094, 106822696169.600
10, 0.094, 106754526496.009
IGNORE(0)
Bandwidth:
	Minimum: 106.562G
	Maximum: 106.969G
	Average: 106.815G
	STD_DEV: 101.509M
[ Read Sequential | 936.276 ms ]
Read Random
Iteration, Time Elapsed (s), Latency (ns)
1, 3.468, 138.732
2, 3.407, 136.284
3, 3.414, 136.577
4, 3.437, 137.500
5, 3.437, 137.492
6, 3.430, 137.195
7, 3.418, 136.726
8, 3.398, 135.910
9, 3.436, 137.441
10, 3.440, 137.584
IGNORE( )
Latency:
	Minimum: 135.91
	Maximum: 138.73
	Average: 137.14
	STD_DEV:   0.76
[ Read Random | 34.286 s ]
Write Sequential
Iteration, Time Elapsed (s), Bandwidth (B/s)
1, 0.136, 73489525324.836
2, 0.136, 73760889163.325
3, 0.136, 73756807255.451
4, 0.136, 73775960174.202
5, 0.136, 73778386151.071
6, 0.136, 73653973631.877
7, 0.136, 73754006815.490
8, 0.136, 73680605450.629
9, 0.136, 73749605854.450
10, 0.136, 73755175271.577
Bandwidth:
	Minimum:  73.490G
	Maximum:  73.778G
	Average:  73.715G
	STD_DEV:  84.655M
[ Write Sequential | 1.357 s ]
[ Memory Test | 36.579 s ]
Persistent Memory
Is pmem: True
Memory Size:  10.000GB
Latency Loads:  25.000MB
Read Sequential
Iteration, Time Elapsed (s), Bandwidth (B/s)
1, 0.262, 38189325244.956
2, 0.251, 39809838750.845
3, 0.246, 40601721573.897
4, 0.247, 40509758105.985
5, 0.247, 40525620376.227
6, 0.247, 40514392934.585
7, 0.247, 40534574179.880
8, 0.247, 40545918189.503
9, 0.251, 39792425993.201
10, 0.246, 40583135667.422
IGNORE(0)
Bandwidth:
	Minimum:  38.189G
	Maximum:  40.602G
	Average:  40.161G
	STD_DEV: 720.158M
[ Read Sequential | 2.491 s ]
Read Random
Iteration, Time Elapsed (s), Latency (ns)
1, 10.092, 403.677
2, 10.092, 403.692
3, 10.092, 403.662
4, 10.092, 403.664
5, 10.095, 403.782
6, 10.092, 403.673
7, 10.094, 403.758
8, 10.092, 403.700
9, 10.091, 403.643
10, 10.096, 403.839
IGNORE( )
Latency:
	Minimum: 403.64
	Maximum: 403.83
	Average: 403.70
	STD_DEV:   0.06
[ Read Random | 1.682 min ]
Write Sequential
Iteration, Time Elapsed (s), Bandwidth (B/s)
1, 3.269, 3058658383.090
2, 3.282, 3047313875.097
3, 3.288, 3041616304.636
4, 3.283, 3045729902.378
5, 3.279, 3049377000.798
6, 3.283, 3045810712.785
7, 3.281, 3047728612.592
8, 3.282, 3046459698.522
9, 3.285, 3043691556.157
10, 3.287, 3042271955.992
Bandwidth:
	Minimum:   3.042G
	Maximum:   3.059G
	Average:   3.047G
	STD_DEV:   4.557M
[ Write Sequential | 32.821 s ]
[ Memory Test | 2.271 min ]
Read Sequential Bandwith (B/s)
Minimum: 106.562G,  38.189G, -68.373G, -64.16%
Maximum: 106.969G,  40.602G, -66.367G, -62.04%
Average: 106.815G,  40.161G, -66.654G, -62.40%
STD_DEV: 101.509M, 720.158M, 618.650M, 609.46%
Read Random Latency (ns)
Minimum: 135.91, 403.64, 267.73, 196.99%
Maximum: 138.73, 403.83, 265.10, 191.09%
Average: 137.14, 403.70, 266.56, 194.37%
STD_DEV:   0.76,   0.06,  -0.70, -92.17%
Write Sequential Bandwith (B/s)
Minimum:  73.490G,   3.042G, -70.448G, -95.86%
Maximum:  73.778G,   3.059G, -70.720G, -95.85%
Average:  73.715G,   3.047G, -70.669G, -95.87%
STD_DEV:  84.655M,   4.557M, -80.098M, -94.62%
[ Memory Benchmark | 2.985 min ]
STREAM Benchmark
DRAM
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 300000000 (elements), Offset = 0 (elements)
Memory per array = 2288.8 MiB (= 2.2 GiB).
Total memory required = 6866.5 MiB (= 6.7 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 18
Number of Threads counted = 18
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 48724 microseconds.
   (= 48724 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           66714.8     0.071975     0.071948     0.072014
Scale:          66716.8     0.072186     0.071946     0.073832
Add:            75297.9     0.095648     0.095620     0.095678
Triad:          75367.3     0.095581     0.095532     0.095652
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
PMEM
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 300000000 (elements), Offset = 0 (elements)
Memory per array = 2288.8 MiB (= 2.2 GiB).
Total memory required = 6866.5 MiB (= 6.7 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 18
Number of Threads counted = 18
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 824074 microseconds.
   (= 824074 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            5523.4     0.870383     0.869030     0.872098
Scale:           5555.0     0.866655     0.864090     0.869580
Add:             8092.6     0.890789     0.889704     0.892519
Triad:           8185.3     0.882128     0.879623     0.885237
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
[ STREAM Benchmark | 46.071 s ]
[ Time Elapsed | 5.346 min ]
