Performance Analytics of Graph Algorithms using Intel Optane DC Persistent Memory
by Evan Unmann
OpenMP:
	omp_get_num_procs: 72
	omp_get_max_threads: 36
	OMP_PLACES: {0}:36
	OMP_NUM_THREADS: 36
	OMP_PROC_BIND: true
PMEM:
	Version: 1.1
	PMEM Accessible: True
Test Parameters:
	mem_alloc_size:   1.000GB
	graph_num_vertices: 100.000K
	graph_min_degree:  20.00
	graph_max_degree: 200.00
	graph_min_value:   1.00
	graph_max_value:   2.00
	page_rank_iterations: 100.00
	page_rank_num_dampening_factors:   8.00
	test_iterations:  10.00
	out_dir: output/2021.04.11.12.50.01/
Loading Facebook graph from ./graph_examples/facebook_combined.txt
[ Graph DRAM Load | 15.973 ms ]
[ Graph PMEM Copy | 13.924 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 4039 =   4.039K
Number of Edges: 176468 = 176.468K
Memory Size: 1427904 =   1.428MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.003, 43.226
2, 0.003, 47.459
3, 0.003, 40.913
4, 0.002, 35.927
5, 0.002, 58.321
6, 0.001, 72.347
7, 0.002, 83.659
8, 0.001, 71.598
9, 0.001, 69.611
10, 0.002, 98.937
MTEPS:
	Minimum:  35.92
	Maximum:  98.93
	Average:  62.20
	STD_DEV:  19.47
[ Breadth First Traversal | 38.947 ms ]
Breadth First Traversal
Number of Vertices: 4039 =   4.039K
Number of Edges: 176468 = 176.468K
Memory Size: 1427904 =   1.428MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.004, 30.702
2, 0.004, 31.352
3, 0.005, 24.322
4, 0.003, 20.904
5, 0.003, 36.445
6, 0.003, 27.623
7, 0.004, 31.829
8, 0.003, 26.712
9, 0.003, 29.273
10, 0.004, 33.913
MTEPS:
	Minimum:  20.90
	Maximum:  36.44
	Average:  29.30
	STD_DEV:   4.35
[ Breadth First Traversal | 37.671 ms ]
Breadth First Traversal
Number of Vertices: 4039 =   4.039K
Number of Edges: 176468 = 176.468K
Memory Size: 1427904 =   1.428MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.001, 109.303
2, 0.001, 107.665
3, 0.001, 73.919
4, 0.001, 64.078
5, 0.001, 100.113
6, 0.001, 108.960
7, 0.001, 105.597
8, 0.001, 91.948
9, 0.001, 86.406
10, 0.001, 123.276
MTEPS:
	Minimum:  64.07
	Maximum: 123.27
	Average:  97.12
	STD_DEV:  17.13
[ Breadth First Traversal | 12.242 ms ]
Breadth First Traversal
Number of Vertices: 4039 =   4.039K
Number of Edges: 176468 = 176.468K
Memory Size: 1427904 =   1.428MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.004, 35.094
2, 0.005, 37.454
3, 0.004, 24.688
4, 0.003, 21.265
5, 0.003, 38.256
6, 0.003, 28.430
7, 0.004, 33.495
8, 0.003, 25.917
9, 0.003, 30.216
10, 0.005, 32.532
MTEPS:
	Minimum:  21.26
	Maximum:  38.25
	Average:  30.73
	STD_DEV:   5.35
[ Breadth First Traversal | 36.946 ms ]
[ Breadth First Traversal Benchmark | 125.883 ms ]
Loading Epinions graph from ./graph_examples/soc-Epinions1.txt
[ Graph DRAM Load | 37.461 ms ]
[ Graph PMEM Copy | 30.575 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 75888 =  75.888K
Number of Edges: 508837 = 508.837K
Memory Size: 4374252 =   4.374MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.010, 46.388
2, 0.008, 55.508
3, 0.008, 52.732
4, 0.007, 63.689
5, 0.008, 55.990
6, 0.007, 66.597
7, 0.008, 61.801
8, 0.007, 60.831
9, 0.007, 64.359
10, 0.008, 61.442
MTEPS:
	Minimum:  46.38
	Maximum:  66.59
	Average:  58.93
	STD_DEV:   5.87
[ Breadth First Traversal | 98.770 ms ]
Breadth First Traversal
Number of Vertices: 75888 =  75.888K
Number of Edges: 508837 = 508.837K
Memory Size: 4374252 =   4.374MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.021, 21.749
2, 0.021, 21.679
3, 0.023, 19.677
4, 0.022, 21.553
5, 0.024, 19.722
6, 0.022, 21.825
7, 0.022, 21.457
8, 0.021, 19.718
9, 0.022, 21.526
10, 0.022, 21.013
MTEPS:
	Minimum:  19.67
	Maximum:  21.82
	Average:  20.99
	STD_DEV:   0.86
[ Breadth First Traversal | 220.477 ms ]
Breadth First Traversal
Number of Vertices: 75888 =  75.888K
Number of Edges: 508837 = 508.837K
Memory Size: 4374252 =   4.374MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.008, 57.117
2, 0.008, 59.011
3, 0.008, 52.661
4, 0.008, 62.184
5, 0.009, 54.390
6, 0.007, 63.803
7, 0.008, 60.699
8, 0.007, 59.436
9, 0.007, 63.908
10, 0.008, 59.289
MTEPS:
	Minimum:  52.66
	Maximum:  63.90
	Average:  59.25
	STD_DEV:   3.53
[ Breadth First Traversal | 78.403 ms ]
Breadth First Traversal
Number of Vertices: 75888 =  75.888K
Number of Edges: 508837 = 508.837K
Memory Size: 4374252 =   4.374MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.022, 21.234
2, 0.022, 21.162
3, 0.022, 19.910
4, 0.021, 22.047
5, 0.022, 20.723
6, 0.022, 21.353
7, 0.022, 21.444
8, 0.021, 20.179
9, 0.022, 21.056
10, 0.022, 20.965
MTEPS:
	Minimum:  19.91
	Maximum:  22.04
	Average:  21.00
	STD_DEV:   0.58
[ Breadth First Traversal | 220.101 ms ]
[ Breadth First Traversal Benchmark | 617.805 ms ]
Loading Pokec graph from ./graph_examples/soc-pokec-relationships.txt
[ Graph DRAM Load | 2.381 s ]
[ Graph PMEM Copy | 275.283 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 1632804 =   1.633M
Number of Edges: 30622564 =  30.623M
Memory Size: 251511732 = 251.512MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.140, 202.066
2, 0.137, 214.016
3, 0.119, 219.524
4, 0.113, 210.028
5, 0.121, 221.193
6, 0.122, 223.697
7, 0.115, 208.400
8, 0.115, 213.471
9, 0.128, 220.540
10, 0.134, 219.307
MTEPS:
	Minimum: 202.06
	Maximum: 223.69
	Average: 215.22
	STD_DEV:   6.49
[ Breadth First Traversal | 1.376 s ]
Breadth First Traversal
Number of Vertices: 1632804 =   1.633M
Number of Edges: 30622564 =  30.623M
Memory Size: 251511732 = 251.512MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.239, 118.218
2, 0.256, 114.360
3, 0.214, 122.719
4, 0.203, 117.094
5, 0.217, 123.605
6, 0.241, 113.249
7, 0.205, 116.951
8, 0.205, 119.792
9, 0.231, 121.531
10, 0.254, 115.909
MTEPS:
	Minimum: 113.24
	Maximum: 123.60
	Average: 118.34
	STD_DEV:   3.32
[ Breadth First Traversal | 2.271 s ]
Breadth First Traversal
Number of Vertices: 1632804 =   1.633M
Number of Edges: 30622564 =  30.623M
Memory Size: 251511732 = 251.512MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.143, 198.385
2, 0.140, 208.741
3, 0.123, 213.864
4, 0.116, 206.103
5, 0.124, 216.007
6, 0.125, 218.418
7, 0.118, 203.639
8, 0.118, 208.072
9, 0.135, 208.411
10, 0.162, 182.414
MTEPS:
	Minimum: 182.41
	Maximum: 218.41
	Average: 206.40
	STD_DEV:   9.75
[ Breadth First Traversal | 1.305 s ]
Breadth First Traversal
Number of Vertices: 1632804 =   1.633M
Number of Edges: 30622564 =  30.623M
Memory Size: 251511732 = 251.512MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.242, 116.983
2, 0.258, 113.657
3, 0.221, 118.660
4, 0.207, 114.943
5, 0.224, 119.917
6, 0.227, 120.249
7, 0.210, 114.343
8, 0.209, 117.462
9, 0.235, 119.559
10, 0.257, 114.796
MTEPS:
	Minimum: 113.65
	Maximum: 120.24
	Average: 117.05
	STD_DEV:   2.36
[ Breadth First Traversal | 2.295 s ]
[ Breadth First Traversal Benchmark | 7.248 s ]
Loading Stack Overflow graph from ./graph_examples/sx-stackoverflow.txt
[ Graph DRAM Load | 9.217 s ]
[ Graph PMEM Copy | 572.170 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 6024271 =   6.024M
Number of Edges: 63497050 =  63.497M
Memory Size: 532073488 = 532.073MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.500, 125.257
2, 0.495, 125.382
3, 0.499, 124.532
4, 0.495, 124.779
5, 0.498, 124.553
6, 0.498, 125.828
7, 0.510, 122.081
8, 0.540, 115.745
9, 0.498, 125.578
10, 0.502, 123.163
MTEPS:
	Minimum: 115.74
	Maximum: 125.82
	Average: 123.69
	STD_DEV:   2.86
[ Breadth First Traversal | 27.153 s ]
Breadth First Traversal
Number of Vertices: 6024271 =   6.024M
Number of Edges: 63497050 =  63.497M
Memory Size: 532073488 = 532.073MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.860, 72.759
2, 0.857, 72.393
3, 0.865, 71.771
4, 0.883, 69.924
5, 0.863, 71.890
6, 0.868, 72.159
7, 0.867, 71.796
8, 0.866, 72.167
9, 0.872, 71.623
10, 0.867, 71.354
MTEPS:
	Minimum:  69.92
	Maximum:  72.75
	Average:  71.78
	STD_DEV:   0.72
[ Breadth First Traversal | 8.741 s ]
Breadth First Traversal
Number of Vertices: 6024271 =   6.024M
Number of Edges: 63497050 =  63.497M
Memory Size: 532073488 = 532.073MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.526, 119.091
2, 0.506, 122.453
3, 0.504, 123.258
4, 0.505, 122.360
5, 0.504, 123.074
6, 0.505, 124.087
7, 0.511, 121.849
8, 0.504, 124.019
9, 0.507, 123.316
10, 0.510, 121.239
MTEPS:
	Minimum: 119.09
	Maximum: 124.08
	Average: 122.47
	STD_DEV:   1.41
[ Breadth First Traversal | 5.098 s ]
Breadth First Traversal
Number of Vertices: 6024271 =   6.024M
Number of Edges: 63497050 =  63.497M
Memory Size: 532073488 = 532.073MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.890, 70.355
2, 0.878, 70.606
3, 0.893, 69.516
4, 0.892, 69.191
5, 0.888, 69.849
6, 0.894, 70.085
7, 0.902, 68.990
8, 0.891, 70.159
9, 0.918, 68.100
10, 0.892, 69.338
MTEPS:
	Minimum:  68.10
	Maximum:  70.60
	Average:  69.61
	STD_DEV:   0.71
[ Breadth First Traversal | 9.018 s ]
[ Breadth First Traversal Benchmark | 50.009 s ]
Loading Live Journal graph from ./graph_examples/soc-LiveJournal1.txt
[ Graph DRAM Load | 4.784 s ]
[ Graph PMEM Copy | 618.325 ms ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 4847571 =   4.848M
Number of Edges: 68993773 =  68.994M
Memory Size: 571340472 = 571.340MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.476, 94.410
2, 0.560, 111.966
3, 0.509, 107.928
4, 0.532, 113.829
5, 0.521, 116.891
6, 0.461, 93.932
7, 0.530, 109.482
8, 0.494, 108.989
9, 0.540, 113.519
10, 0.485, 106.390
MTEPS:
	Minimum:  93.93
	Maximum: 116.89
	Average: 107.73
	STD_DEV:   7.39
[ Breadth First Traversal | 5.639 s ]
Breadth First Traversal
Number of Vertices: 4847571 =   4.848M
Number of Edges: 68993773 =  68.994M
Memory Size: 571340472 = 571.340MB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.732, 61.423
2, 0.887, 70.664
3, 0.802, 68.560
4, 0.844, 71.760
5, 0.843, 72.278
6, 0.722, 59.961
7, 0.839, 69.141
8, 0.777, 69.343
9, 0.875, 70.058
10, 0.786, 65.575
MTEPS:
	Minimum:  59.96
	Maximum:  72.27
	Average:  67.87
	STD_DEV:   4.01
[ Breadth First Traversal | 8.153 s ]
Breadth First Traversal
Number of Vertices: 4847571 =   4.848M
Number of Edges: 68993773 =  68.994M
Memory Size: 571340472 = 571.340MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.516, 87.075
2, 0.571, 109.861
3, 0.523, 105.174
4, 0.540, 112.114
5, 0.532, 114.681
6, 0.471, 91.925
7, 0.542, 106.954
8, 0.503, 107.184
9, 0.554, 110.626
10, 0.497, 103.694
MTEPS:
	Minimum:  87.07
	Maximum: 114.68
	Average: 104.92
	STD_DEV:   8.37
[ Breadth First Traversal | 5.258 s ]
Breadth First Traversal
Number of Vertices: 4847571 =   4.848M
Number of Edges: 68993773 =  68.994M
Memory Size: 571340472 = 571.340MB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.747, 60.205
2, 0.913, 68.701
3, 0.840, 65.461
4, 0.864, 70.091
5, 0.861, 70.764
6, 0.734, 58.930
7, 0.860, 67.442
8, 0.790, 68.258
9, 0.896, 68.451
10, 0.786, 65.574
MTEPS:
	Minimum:  58.93
	Maximum:  70.76
	Average:  66.38
	STD_DEV:   3.77
[ Breadth First Traversal | 8.340 s ]
[ Breadth First Traversal Benchmark | 27.390 s ]
Loading Orkut graph from ./graph_examples/com-orkut.ungraph.txt
[ Graph DRAM Load | 25.527 s ]
[ Graph PMEM Copy | 1.987 s ]
Breadth First Traversal Benchmark
Breadth First Traversal
Number of Vertices: 3072627 =   3.073M
Number of Edges: 234370166 = 234.370M
Memory Size: 1887251840 =   1.887GB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.869, 269.417
2, 0.493, 472.695
3, 0.395, 408.883
4, 0.652, 359.562
5, 0.553, 275.119
6, 0.590, 279.847
7, 0.639, 297.749
8, 0.623, 362.897
9, 0.595, 269.260
10, 0.508, 386.724
MTEPS:
	Minimum: 269.26
	Maximum: 472.69
	Average: 338.21
	STD_DEV:  67.09
[ Breadth First Traversal | 5.968 s ]
Breadth First Traversal
Number of Vertices: 3072627 =   3.073M
Number of Edges: 234370166 = 234.370M
Memory Size: 1887251840 =   1.887GB
Function Templates: [with alloc_type = std::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 1.286, 182.118
2, 0.829, 281.242
3, 0.633, 255.005
4, 1.079, 217.044
5, 0.831, 183.240
6, 0.885, 186.404
7, 0.960, 198.199
8, 0.954, 237.068
9, 0.881, 181.831
10, 0.817, 240.603
MTEPS:
	Minimum: 181.83
	Maximum: 281.24
	Average: 216.27
	STD_DEV:  33.77
[ Breadth First Traversal | 9.167 s ]
Breadth First Traversal
Number of Vertices: 3072627 =   3.073M
Number of Edges: 234370166 = 234.370M
Memory Size: 1887251840 =   1.887GB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = std::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 0.898, 260.660
2, 0.513, 454.314
3, 0.474, 340.397
4, 0.665, 352.459
5, 0.574, 265.272
6, 0.598, 275.787
7, 0.650, 292.794
8, 0.635, 356.136
9, 0.604, 265.058
10, 0.518, 379.064
MTEPS:
	Minimum: 260.66
	Maximum: 454.31
	Average: 324.19
	STD_DEV:  60.29
[ Breadth First Traversal | 6.135 s ]
Breadth First Traversal
Number of Vertices: 3072627 =   3.073M
Number of Edges: 234370166 = 234.370M
Memory Size: 1887251840 =   1.887GB
Function Templates: [with alloc_type = PMEM::allocator; temp_alloc_type = PMEM::allocator; Benchmark::Parameters = Benchmark::Parameters]
Iteration, Time Elapsed (s), MTEPS
1, 1.294, 180.943
2, 0.857, 271.838
3, 0.670, 240.952
4, 1.108, 211.405
5, 0.846, 179.869
6, 0.906, 182.082
7, 0.981, 193.937
8, 0.980, 230.888
9, 0.900, 177.822
10, 0.834, 235.524
MTEPS:
	Minimum: 177.82
	Maximum: 271.83
	Average: 210.52
	STD_DEV:  31.13
[ Breadth First Traversal | 9.393 s ]
[ Breadth First Traversal Benchmark | 30.663 s ]
Memory Benchmark
DRAM
Memory Size:   1.000GB
Latency Loads:  25.000MB
Read Sequential
Iteration, Time Elapsed (s), Bandwidth (B/s)
1, 0.017, 58501718341.722
2, 0.020, 50327182043.181
3, 0.015, 67364413791.840
4, 0.015, 67479647969.473
5, 0.015, 67405252985.733
6, 0.015, 67336489663.950
7, 0.015, 67496513805.062
8, 0.015, 67335369734.475
9, 0.015, 67340303144.496
10, 0.015, 67435962641.286
IGNORE(0)
Bandwidth:
	Minimum:  50.327G
	Maximum:  67.497G
	Average:  64.802G
	STD_DEV:   5.506G
[ Read Sequential | 155.811 ms ]
Read Random
Iteration, Time Elapsed (s), Latency (ns)
1, 2.778, 111.132
2, 2.776, 111.030
3, 2.775, 111.009
4, 2.775, 111.018
5, 2.775, 110.988
6, 2.775, 110.998
7, 2.775, 111.008
8, 2.776, 111.036
9, 2.779, 111.176
10, 2.776, 111.022
IGNORE( )
Latency:
	Minimum: 110.98
	Maximum: 111.17
	Average: 111.04
	STD_DEV:   0.05
[ Read Random | 27.760 s ]
Write Sequential
Iteration, Time Elapsed (s), Bandwidth (B/s)
1, 0.023, 42838147198.728
2, 0.023, 42688798361.126
3, 0.023, 42644803415.132
4, 0.023, 42808514219.640
5, 0.023, 42752892981.386
6, 0.023, 42702763825.361
7, 0.023, 42839240950.339
8, 0.023, 42855018472.656
9, 0.023, 42965833526.214
10, 0.023, 42885775238.654
Bandwidth:
	Minimum:  42.645G
	Maximum:  42.966G
	Average:  42.798G
	STD_DEV:  94.364M
[ Write Sequential | 233.711 ms ]
[ Memory Test | 28.150 s ]
Persistent Memory
Is pmem: True
Memory Size:   1.000GB
Latency Loads:  25.000MB
Read Sequential
Iteration, Time Elapsed (s), Bandwidth (B/s)
1, 0.275, 3630667950.103
2, 0.099, 10111276825.950
3, 0.029, 34865306777.917
4, 0.027, 37666193604.386
5, 0.031, 32062379539.636
6, 0.026, 38438673364.529
7, 0.027, 36477414060.672
8, 0.026, 37738060649.366
9, 0.027, 37512769815.755
10, 0.027, 36937218990.872
IGNORE(0)
Bandwidth:
	Minimum:   3.631G
	Maximum:  38.439G
	Average:  30.544G
	STD_DEV:  12.051G
[ Read Sequential | 594.506 ms ]
Read Random
Iteration, Time Elapsed (s), Latency (ns)
1, 9.591, 383.659
2, 9.596, 383.835
3, 9.600, 384.018
4, 9.598, 383.916
5, 9.594, 383.773
6, 9.597, 383.889
7, 9.592, 383.682
8, 9.593, 383.734
9, 9.597, 383.875
10, 9.591, 383.635
IGNORE( )
Latency:
	Minimum: 383.63
	Maximum: 384.01
	Average: 383.80
	STD_DEV:   0.11
[ Read Random | 1.599 min ]
Write Sequential
Iteration, Time Elapsed (s), Bandwidth (B/s)
1, 0.777, 1286936100.458
2, 0.804, 1243652393.520
3, 0.801, 1247868520.460
4, 0.812, 1232192600.516
5, 0.797, 1254208287.396
6, 0.803, 1244816895.209
7, 0.812, 1230986602.550
8, 0.807, 1239360532.896
9, 0.803, 1246035746.617
10, 0.812, 1231193926.758
Bandwidth:
	Minimum:   1.231G
	Maximum:   1.287G
	Average:   1.246G
	STD_DEV:  15.595M
[ Write Sequential | 8.029 s ]
[ Memory Test | 1.743 min ]
Read Sequential Bandwith (B/s)
Minimum:  50.327G,   3.631G, -46.697G, -92.79%
Maximum:  67.497G,  38.439G, -29.058G, -43.05%
Average:  64.802G,  30.544G, -34.258G, -52.87%
STD_DEV:   5.506G,  12.051G,   6.544G, 118.85%
Read Random Latency (ns)
Minimum: 110.98, 383.63, 272.64, 245.66%
Maximum: 111.17, 384.01, 272.84, 245.42%
Average: 111.04, 383.80, 272.76, 245.64%
STD_DEV:   0.05,   0.11,   0.06, 103.28%
Write Sequential Bandwith (B/s)
Minimum:  42.645G,   1.231G, -41.414G, -97.11%
Maximum:  42.966G,   1.287G, -41.679G, -97.00%
Average:  42.798G,   1.246G, -41.552G, -97.09%
STD_DEV:  94.364M,  15.595M, -78.769M, -83.47%
[ Memory Benchmark | 2.237 min ]
STREAM Benchmark
DRAM
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 200000000 (elements), Offset = 0 (elements)
Memory per array = 1525.9 MiB (= 1.5 GiB).
Total memory required = 4577.6 MiB (= 4.5 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 36
Number of Threads counted = 36
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 46901 microseconds.
   (= 46901 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           53990.1     0.059345     0.059270     0.059392
Scale:          47485.5     0.067448     0.067389     0.067507
Add:            54274.1     0.088493     0.088440     0.088577
Triad:          51180.3     0.093878     0.093786     0.093944
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
PMEM
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 200000000 (elements), Offset = 0 (elements)
Memory per array = 1525.9 MiB (= 1.5 GiB).
Total memory required = 4577.6 MiB (= 4.5 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 36
Number of Threads counted = 36
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 1265320 microseconds.
   (= 1265320 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            2682.4     1.198741     1.192971     1.204600
Scale:           1321.8     2.427016     2.420886     2.434685
Add:             4082.9     1.180217     1.175642     1.187148
Triad:           2428.0     1.984539     1.976931     1.997527
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
[ STREAM Benchmark | 1.365 min ]
[ Time Elapsed | 6.296 min ]
